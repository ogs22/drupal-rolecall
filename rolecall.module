<?php



function rolecall_user_login(&$edit, $account, $category = NULL) {
    if (_check_vars() !== TRUE) {
        //ballsup error in config give up;
        return;
    }
    $rolemap = array (
        /* 	  "role" => "htaccessgroup", */
        "damtpuser" => "damtpusers"
    );

    // loop thru each role - groupname to see if current user is in it
    foreach ($rolemap as $role => $groupname) {
        //load the role object
        $roleobj = user_role_load_by_name($role);
        //check to see if user is in groupfile
        if ( _check_member($account->name,$groupname) !== FALSE) {
            //you are in groupname
            $iam = user_has_role($roleobj->rid);
            if ($iam) {
                //user already in group
            } else {
                // add them in
                $roles = $account->roles + array($roleobj->rid => $role);
                $account->original = clone $account;
                user_save($account, array('roles' => $roles));
            }
        } else {
            //remove the role from the account!
            //drupal_set_message(t("removing role from user"));
            $roles = $account->roles;
            unset($roles[$roleobj->rid]);
            $account->original = clone $account;
            user_save($account, array('roles' => $roles));
        }
        
    }
    
}






function _check_member($username,$groupname) {
    //groupfile should be a like
    //groupname: member member member

    $groupfile = variable_get('rolecall_groupfile', drupal_get_path("module","rolecall")."/webgroup_all");
    $ug = file($groupfile);
    foreach ($ug as $line) {
        $x = explode(":",$line);
	    if (trim ($x[0]) == $groupname) {
            $members = explode(" ",$x[1]);
            foreach($members as $name) {
                if (trim($name) == $username) {
                    return TRUE;
                }
            }
	    }
    }
    return FALSE;
}


function rolecall_menu() {

    $items = array();

    $items['admin/config/people/rolecall'] = array(
        'title' => 'Rolecall module settings',
        'description' => 'Description of rolecall stuff',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('rolecall_admin'),
        'access arguments' => array('administer rolecall settings'),
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}


function rolecall_admin() {

    $form = array();

    $form['rolecall_groupfile'] = array(
        '#type' => 'textfield',
        '#title' => t('path of the groupfile'),
        '#default_value' => variable_get('rolecall_groupfile',  drupal_get_path("module","rolecall")."/webgroup_all"),
        '#size' => 200,
        '#maxlength' => 200,
        '#description' => t("Where the groupfile is...."),
        '#required' => TRUE,
    );

    return system_settings_form($form);

}

function rolecall_admin_validate($form, &$form_state) {
    $var = array();
    $var['rolecall_groupfile'] = $form_state['values']['rolecall_groupfile'];
    if (_check_vars($var) !== TRUE) {
        form_set_error('rolecall_groupfile',t('File does not exist or is not readable'));
    }
}


function _check_vars($var=array()) {
    if ($var == array() ) {
        $rolecall_groupfile = variable_get('rolecall_groupfile',  drupal_get_path("module","rolecall")."/webgroup_all");
    } else {
        $rolecall_groupfile = $var['rolecall_groupfile'];
    }
    if (file_exists($rolecall_groupfile) !== TRUE) {
        $type = "Rolecall";
        $message = "Rolecall groupfile does not exist";
        $severity = WATCHDOG_CRITICAL;        
        watchdog($type, $message, array(), $severity);
        return FALSE;
    }
    if (is_readable($rolecall_groupfile) !== TRUE) {
        $type = "Rolecall";
        $message = "Rolecall groupfile not readable";
        $severity = WATCHDOG_CRITICAL;        
        watchdog($type, $message, array(), $severity);
        return FALSE;
    }
    return TRUE;
    
}